USE [MRP_ROMP]
GO

/****** Object:  StoredProcedure [new].[SP_DIM_KNOWLEDGE_ACQUISITION]    Script Date: 2020-04-09 12:49:18 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE OR ALTER           PROCEDURE [new].[SP_DIM_KNOWLEDGE_ACQUISITION]
AS
BEGIN

BEGIN TRAN

SET NOCOUNT ON;

DECLARE @TABLE_COUNT INT
DECLARE @DATA_COUNT INT
DECLARE @TABLE_NAME VARCHAR(1000)
DECLARE @QUESTION VARCHAR(4000)
DECLARE @COLUMN VARCHAR(4000)
DECLARE @STUD_QUERY VARCHAR(MAX) = ''
DECLARE @RESI_QUERY VARCHAR(MAX) = ''
DECLARE @CNT_STUD INT = 1
DECLARE @CNT_RESI INT = 1
DECLARE @CNT_TABLE INT = 1

DROP TABLE IF EXISTS ##KnowledgeStudent

SELECT ROW_NUMBER() OVER(ORDER BY COLUMN_NAME) AS ROW_ID,
TABLE_NAME,
COLUMN_NAME,
COLUMN_NUMBER INTO ##KnowledgeStudent
FROM (
SELECT TABLE_NAME, 
TRIM(SUBSTRING(COLUMN_NAME,CHARINDEX('_',COLUMN_NAME)+4,LEN(COLUMN_NAME))) AS COLUMN_NAME,
COLUMN_NUMBER
FROM generic.table_columns
WHERE 
UPPER(COLUMN_NAME) LIKE '%KNOWLEDGE%'
AND TABLE_NAME LIKE 'generic.new_student_survey' ) BASE

SELECT @DATA_COUNT = COUNT(1) FROM ##KnowledgeStudent;

WHILE @CNT_STUD <= @DATA_COUNT
BEGIN

SELECT @TABLE_NAME = TABLE_NAME, @QUESTION = COLUMN_NAME, @COLUMN = COLUMN_NUMBER FROM ##KnowledgeStudent WHERE ROW_ID = @CNT_STUD

SET @STUD_QUERY = @STUD_QUERY + @COLUMN + ' AS ''Q' + CAST(@CNT_STUD AS VARCHAR) + ''','

SET @CNT_STUD = @CNT_STUD + 1

END

DROP TABLE IF EXISTS ##KnowledgeAccStudent

SET @STUD_QUERY = 'SELECT CAST(CAST(COLUMN1 AS FLOAT) AS BIGINT) AS RESPONDENT_ID, ' + SUBSTRING(@STUD_QUERY, 0, LEN(@STUD_QUERY)) + ' INTO ##KnowledgeAccStudent FROM ' + @TABLE_NAME

EXECUTE(@STUD_QUERY)

DROP TABLE IF EXISTS ##KnowledgeResident

SELECT ROW_NUMBER() OVER(ORDER BY COLUMN_NAME) AS ROW_ID,
TABLE_NAME,
COLUMN_NAME,
COLUMN_NUMBER INTO ##KnowledgeResident
FROM (
SELECT TABLE_NAME, 
TRIM(SUBSTRING(COLUMN_NAME,CHARINDEX('_',COLUMN_NAME)+4,LEN(COLUMN_NAME))) AS COLUMN_NAME,
COLUMN_NUMBER
FROM generic.table_columns
WHERE 
UPPER(COLUMN_NAME) LIKE '%KNOWLEDGE%'
AND TABLE_NAME LIKE 'generic.new_resident_survey' ) BASE

SELECT @DATA_COUNT = COUNT(1) FROM ##KnowledgeResident;

WHILE @CNT_RESI <= @DATA_COUNT
BEGIN

SELECT @TABLE_NAME = TABLE_NAME, @QUESTION = COLUMN_NAME, @COLUMN = COLUMN_NUMBER FROM ##KnowledgeResident WHERE ROW_ID = @CNT_RESI

SET @RESI_QUERY = @RESI_QUERY + @COLUMN + ' AS ''Q' + CAST(@CNT_RESI AS VARCHAR) + ''','

SET @CNT_RESI = @CNT_RESI + 1

END

DROP TABLE IF EXISTS ##KnowledgeAccResident

SET @RESI_QUERY = 'SELECT CAST(CAST(COLUMN1 AS FLOAT) AS BIGINT) AS RESPONDENT_ID, ' + SUBSTRING(@RESI_QUERY, 0, LEN(@RESI_QUERY)) + ' INTO ##KnowledgeAccResident FROM ' + @TABLE_NAME

EXECUTE(@RESI_QUERY)

SELECT @TABLE_COUNT = COUNT(1) FROM new.DimKnowledgeAcquisition;

IF @TABLE_COUNT > 0
BEGIN

DELETE FROM new.DimKnowledgeAcquisition

END

INSERT INTO new.DimKnowledgeAcquisition
SELECT
FORMAT(GETDATE(), 'yyyyMMdd'),
RESPONDENT_ID,
CASE 
	WHEN ACQUISITION >= 2.5 THEN 'High'
	WHEN ACQUISITION < 2.5 AND ACQUISITION >= 1 THEN 'Medium'
	WHEN ACQUISITION < 1 AND ACQUISITION >= 0 THEN 'Low'
	END AS KNOWLEDGE_ACQUISITION
FROM (
SELECT 
RESPONDENT_ID,
( Q1_VALUE + Q2_VALUE + Q3_VALUE + Q4_VALUE) AS ACQUISITION
FROM (
SELECT
RESPONDENT_ID,
CASE TRIM(UPPER(Q1))
	WHEN 'YES, WITHOUT QUESTION' THEN 1
	WHEN 'SOMEWHAT' THEN 0.5
	WHEN 'NOT AT ALL' THEN 0
	ELSE 0
	END AS Q1_VALUE,
CASE TRIM(UPPER(Q2))
	WHEN 'YES, WITHOUT QUESTION' THEN 1
	WHEN 'SOMEWHAT' THEN 0.5
	WHEN 'NOT AT ALL' THEN 0
	ELSE 0
	END AS Q2_VALUE,
CASE TRIM(UPPER(Q3))
	WHEN 'YES, WITHOUT QUESTION' THEN 1
	WHEN 'SOMEWHAT' THEN 0.5
	WHEN 'NOT AT ALL' THEN 0
	ELSE 0
	END AS Q3_VALUE,
CASE TRIM(UPPER(Q4))
	WHEN 'YES, WITHOUT QUESTION' THEN 1
	WHEN 'SOMEWHAT' THEN 0.5
	WHEN 'NOT AT ALL' THEN 0
	ELSE 0
	END AS Q4_VALUE
FROM ##KnowledgeAccResident) BASE_RESI
) KLDGACQ_RESI
UNION ALL
SELECT
FORMAT(GETDATE(), 'yyyyMMdd'),
RESPONDENT_ID,
CASE 
	WHEN ACQUISITION >= 2 THEN 'High'
	WHEN ACQUISITION < 2 AND ACQUISITION >= 1 THEN 'Medium'
	WHEN ACQUISITION < 1 AND ACQUISITION >= 0 THEN 'Low'
	END AS KNOWLEDGE_ACQUISITION
FROM (
SELECT 
RESPONDENT_ID,
( Q1_VALUE + Q2_VALUE + Q3_VALUE ) AS ACQUISITION
FROM (
SELECT
RESPONDENT_ID,
CASE TRIM(UPPER(Q1))
	WHEN 'YES, WITHOUT QUESTION' THEN 1
	WHEN 'SOMEWHAT' THEN 0.5
	WHEN 'NOT AT ALL' THEN 0
	ELSE 0
	END AS Q1_VALUE,
CASE TRIM(UPPER(Q2))
	WHEN 'YES, WITHOUT QUESTION' THEN 1
	WHEN 'SOMEWHAT' THEN 0.5
	WHEN 'NOT AT ALL' THEN 0
	ELSE 0
	END AS Q2_VALUE,
CASE TRIM(UPPER(Q3))
	WHEN 'YES, WITHOUT QUESTION' THEN 1
	WHEN 'SOMEWHAT' THEN 0.5
	WHEN 'NOT AT ALL' THEN 0
	ELSE 0
	END AS Q3_VALUE
FROM ##KnowledgeAccStudent) BASE_STUD
) KLDGACQ_STUD;

COMMIT TRAN;

END;
GO


