USE [MRP_ROMP]
GO

/****** Object:  StoredProcedure [new].[SP_DIM_PRECEPTOR_RATING]    Script Date: 2020-04-09 12:49:36 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE OR ALTER               PROCEDURE [new].[SP_DIM_PRECEPTOR_RATING]
AS
BEGIN

BEGIN TRAN

SET NOCOUNT ON;

DECLARE @TABLE_COUNT INT
DECLARE @DATA_COUNT INT
DECLARE @TABLE_NAME VARCHAR(1000)
DECLARE @QUESTION VARCHAR(4000)
DECLARE @COLUMN VARCHAR(4000)
DECLARE @QUERY VARCHAR(MAX) = ''
DECLARE @UNION_QUERY VARCHAR(MAX) = ''
DECLARE @CNT_DATA INT = 1
DECLARE @CNT_TABLE INT = 1

DROP TABLE IF EXISTS ##RatingPreceptor

SELECT ROW_NUMBER() OVER(PARTITION BY TABLE_NAME ORDER BY COLUMN_NAME) AS ROW_ID,
TABLE_NAME,
TRIM(COLUMN_NAME) AS COLUMN_NAME,
COLUMN_VALUE INTO ##RatingPreceptor
FROM (
SELECT 
TABLE_NAME,
COLUMN_NAME,
STRING_AGG('IIF('+COLUMN_NUMBER+'<> '''','+COLUMN_NUMBER,',') + ','''')))))' AS COLUMN_VALUE
FROM (
SELECT TABLE_NAME,
TRIM(SUBSTRING(SUBSTRING(COLUMN_NAME,CHARINDEX('_',COLUMN_NAME)+4,LEN(COLUMN_NAME)),0,CHARINDEX(':',SUBSTRING(COLUMN_NAME,CHARINDEX('_',COLUMN_NAME)+4,LEN(COLUMN_NAME))))) AS COLUMN_NAME,
COLUMN_NUMBER
FROM generic.table_columns
WHERE 
UPPER(COLUMN_NAME) LIKE '%RATE%PRECEPTOR%'
AND TABLE_NAME LIKE 'generic.new_%') BASE
GROUP BY TABLE_NAME, COLUMN_NAME
) PREP

DROP TABLE IF EXISTS ##TableNames

SELECT ROW_NUMBER() OVER(ORDER BY TABLE_NAME) AS ROW_ID, TABLE_NAME INTO ##TableNames FROM(SELECT DISTINCT TABLE_NAME FROM ##RatingPreceptor) TAB;

SELECT @TABLE_COUNT = COUNT(1) FROM ##TableNames;

WHILE @CNT_TABLE <= @TABLE_COUNT
BEGIN

	SELECT @TABLE_NAME = TABLE_NAME FROM ##TableNames WHERE ROW_ID = @CNT_TABLE;

	SELECT @DATA_COUNT = COUNT(1) FROM ##RatingPreceptor WHERE TABLE_NAME = @TABLE_NAME;

	SET @QUERY = ''
	SET @CNT_DATA = 1
	
	WHILE @CNT_DATA <= @DATA_COUNT
	BEGIN

		SELECT @QUESTION = COLUMN_NAME, @COLUMN = COLUMN_VALUE FROM ##RatingPreceptor WHERE ROW_ID = @CNT_DATA AND TABLE_NAME = @TABLE_NAME

		SET @QUERY = @QUERY + @COLUMN + ' AS ''Q' + CAST(@CNT_DATA AS VARCHAR) + ''','

		SET @CNT_DATA = @CNT_DATA + 1
	END

	SET @QUERY = 'SELECT CAST(CAST(COLUMN1 AS FLOAT) AS BIGINT) AS RESPONDENT_ID, ' + SUBSTRING(@QUERY, 0, LEN(@QUERY))
	SET @UNION_QUERY = @UNION_QUERY + @QUERY + ' FROM ' + @TABLE_NAME + ' UNION ALL '

	SET @CNT_TABLE = @CNT_TABLE + 1

END

SET @UNION_QUERY = 'SELECT * INTO ##PreceptorRating FROM ( ' + SUBSTRING(@UNION_QUERY,0,LEN(@UNION_QUERY)-8) + ' ) PREP';

DROP TABLE IF EXISTS ##PreceptorRating

EXECUTE (@UNION_QUERY)

SELECT @TABLE_COUNT = COUNT(1) FROM new.DimPreceptorRating;

IF @TABLE_COUNT > 0
BEGIN

DELETE FROM new.DimPreceptorRating

END

INSERT INTO new.DimPreceptorRating
SELECT
FORMAT(GETDATE(), 'yyyyMMdd') AS CYCL_TIME_ID,
RESPONDENT_ID,
((RATING/13 )* 100 )AS PRECEPTOR_RATING
FROM(
SELECT RESPONDENT_ID,
(Q1_VALUE + Q2_VALUE + Q3_VALUE + Q4_VALUE + Q5_VALUE + Q6_VALUE + Q7_VALUE + Q8_VALUE + Q9_VALUE + Q10_VALUE + Q11_VALUE + Q12_VALUE + Q13_VALUE ) AS RATING
FROM (
SELECT 
RESPONDENT_ID,
CASE TRIM(UPPER(Q1))
	WHEN 'STRONGLY AGREE' THEN 1
	WHEN 'AGREE' THEN 0.8
	WHEN 'NEITHER AGREE NOR DISAGREE' THEN 0.6
	WHEN 'DISAGREE' THEN 0.4
	WHEN 'STRONGLY DISAGREE' THEN 0.2
	ELSE 0
	END AS Q1_VALUE,
CASE TRIM(UPPER(Q2))
	WHEN 'STRONGLY AGREE' THEN 1
	WHEN 'AGREE' THEN 0.8
	WHEN 'NEITHER AGREE NOR DISAGREE' THEN 0.6
	WHEN 'DISAGREE' THEN 0.4
	WHEN 'STRONGLY DISAGREE' THEN 0.2
	ELSE 0
	END AS Q2_VALUE,
CASE TRIM(UPPER(Q3))
	WHEN 'STRONGLY AGREE' THEN 1
	WHEN 'AGREE' THEN 0.8
	WHEN 'NEITHER AGREE NOR DISAGREE' THEN 0.6
	WHEN 'DISAGREE' THEN 0.4
	WHEN 'STRONGLY DISAGREE' THEN 0.2
	ELSE 0
	END AS Q3_VALUE,
CASE TRIM(UPPER(Q4))
	WHEN 'STRONGLY AGREE' THEN 1
	WHEN 'AGREE' THEN 0.8
	WHEN 'NEITHER AGREE NOR DISAGREE' THEN 0.6
	WHEN 'DISAGREE' THEN 0.4
	WHEN 'STRONGLY DISAGREE' THEN 0.2
	ELSE 0
	END AS Q4_VALUE,
CASE TRIM(UPPER(Q5))
	WHEN 'STRONGLY AGREE' THEN 1
	WHEN 'AGREE' THEN 0.8
	WHEN 'NEITHER AGREE NOR DISAGREE' THEN 0.6
	WHEN 'DISAGREE' THEN 0.4
	WHEN 'STRONGLY DISAGREE' THEN 0.2
	ELSE 0
	END AS Q5_VALUE,
CASE TRIM(UPPER(Q6))
	WHEN 'STRONGLY AGREE' THEN 1
	WHEN 'AGREE' THEN 0.8
	WHEN 'NEITHER AGREE NOR DISAGREE' THEN 0.6
	WHEN 'DISAGREE' THEN 0.4
	WHEN 'STRONGLY DISAGREE' THEN 0.2
	ELSE 0
	END AS Q6_VALUE,
CASE TRIM(UPPER(Q7))
	WHEN 'STRONGLY AGREE' THEN 1
	WHEN 'AGREE' THEN 0.8
	WHEN 'NEITHER AGREE NOR DISAGREE' THEN 0.6
	WHEN 'DISAGREE' THEN 0.4
	WHEN 'STRONGLY DISAGREE' THEN 0.2
	ELSE 0
	END AS Q7_VALUE,
CASE TRIM(UPPER(Q8))
	WHEN 'STRONGLY AGREE' THEN 1
	WHEN 'AGREE' THEN 0.8
	WHEN 'NEITHER AGREE NOR DISAGREE' THEN 0.6
	WHEN 'DISAGREE' THEN 0.4
	WHEN 'STRONGLY DISAGREE' THEN 0.2
	ELSE 0
	END AS Q8_VALUE,
CASE TRIM(UPPER(Q9))
	WHEN 'STRONGLY AGREE' THEN 1
	WHEN 'AGREE' THEN 0.8
	WHEN 'NEITHER AGREE NOR DISAGREE' THEN 0.6
	WHEN 'DISAGREE' THEN 0.4
	WHEN 'STRONGLY DISAGREE' THEN 0.2
	ELSE 0
	END AS Q9_VALUE,
CASE TRIM(UPPER(Q10))
	WHEN 'STRONGLY AGREE' THEN 1
	WHEN 'AGREE' THEN 0.8
	WHEN 'NEITHER AGREE NOR DISAGREE' THEN 0.6
	WHEN 'DISAGREE' THEN 0.4
	WHEN 'STRONGLY DISAGREE' THEN 0.2
	ELSE 0
	END AS Q10_VALUE,
CASE TRIM(UPPER(Q11))
	WHEN 'STRONGLY AGREE' THEN 1
	WHEN 'AGREE' THEN 0.8
	WHEN 'NEITHER AGREE NOR DISAGREE' THEN 0.6
	WHEN 'DISAGREE' THEN 0.4
	WHEN 'STRONGLY DISAGREE' THEN 0.2
	ELSE 0
	END AS Q11_VALUE,
CASE TRIM(UPPER(Q12))
	WHEN 'STRONGLY AGREE' THEN 1
	WHEN 'AGREE' THEN 0.8
	WHEN 'NEITHER AGREE NOR DISAGREE' THEN 0.6
	WHEN 'DISAGREE' THEN 0.4
	WHEN 'STRONGLY DISAGREE' THEN 0.2
	ELSE 0
	END AS Q12_VALUE,
CASE TRIM(UPPER(Q13))
	WHEN 'STRONGLY AGREE' THEN 1
	WHEN 'AGREE' THEN 0.8
	WHEN 'NEITHER AGREE NOR DISAGREE' THEN 0.6
	WHEN 'DISAGREE' THEN 0.4
	WHEN 'STRONGLY DISAGREE' THEN 0.2
	ELSE 0
	END AS Q13_VALUE
FROM ##PreceptorRating ) BASE
) PREPRAT

COMMIT TRAN;

END;
GO


